{
  "//": "ACTION GRAMMAR START",
  "<Acknowledge>": [
    "uh.. cool.",
    "... ok... .",
    "... sure... .",
    "... uh... ."
  ],
  "<AcknowledgeAndAskForProposals>": [
    "<Acknowledge>. <AskForProposals>"
  ],
  "<AskForProposals>": [
    "I.. can.. does someone have.. can someone else say something",
    ".. what.. what else could we do?"
  ],
  "<InitialAskForProposals>": [
    "..Does anyone have any .. uh.. suggestions? ",
    "What should we do now?",
    "I.. can.. does someone have.. can someone else say something",
    ".. what.. what could we do?"
  ],
  "<PerformMove>": [
    "Ok, I'll.. move... if that's okay.. "
  ],
  "<VoiceLIKE>": [
    "I would like that.. ",
    "`getMoveTarget()` sounds nice"
  ],
  "<VoiceDISLIKE>": [
    "I.. uh.. I don't wanna fight but I don't think we should do that",
    "I'm not really sure about that one.."
  ],
  "<VoiceLIKEProposeAlternative>": [
    "<VoiceLIKE>, <ProposeAlternative>"
  ],
  "<VoiceDISLIKEProposeAlternative>": [
    "<VoiceDISLIKE>, <ProposeAlternative>"
  ],
  "<VoiceDISLIKEWithJustification>": [
    "<VoiceDISLIKE>, <Justification>"
  ],
  "<VoiceLIKEWithJustification>": [
    "<VoiceLIKE>, <Justification>"
  ],
  "<ProposeAlternative>": [
    "<ProposeAlternativeMove> <AlternativeJustification>"
  ],
  "<ProposeMove>": [
    "Does anyone think that `getMovingPiece()` could move to `getMoveTarget()`? ",
    "`getMovingPiece()` moving to `getMoveTarget()` might be a good idea? "
  ],
  "<VoiceLIKEProposeCompromise>": [
    "<VoiceLIKE> <ProposeCompromise>"
  ],
  "<VoiceDISLIKEProposeCompromise>": [
    "<VoiceDISLIKE> <ProposeCompromise>"
  ],
  "<ProposeCompromise>": [
    "<ProposeAlternativeMove> <Justification> too, <CompromiseJustification>",
    "<ProposeAlternativeMove> <Justification> also, <CompromiseJustification>",
    "<ProposeAlternativeMove> <Justification> as well, <CompromiseJustification>"
  ],
  "<CompromiseJustification>": [
    "but also <AlternativeJustification>",
    "and <AlternativeJustification>"
  ],
  "<ProposeMoveWithJustification>": [
    "<ProposeMove> <Justification>"
  ],
  "<ProposeAlternativeMove>": [
    "I think `getAlternativeMovingPiece()` should move to `getAlternativeMoveTarget()` instead"
  ],
  "<RevisitMove>": [
    "Can we go back to talking about `getMovingPiece()` moving to `getMoveTarget()`?",
    "I think `getMovingPiece()` moving to `getMoveTarget()` was a better idea, can we go back to that?"
  ],
  "<Justification>": [
    "because that move would `getJustification()`",
    "because doing that could `getJustification()`"
  ],
  "<AlternativeJustification>": [
    "because that move would `getAlternativeJustification()`",
    "because doing that could `getAlternativeJustification()`"
  ],
  "<Quip>": [
    "When do I get to go home?",
    "Oh man I hate crowds...?",
    "I just wanted to try make friends, how did I end up agreeing to this?"
  ],
  "//": "ACTION GRAMMAR END",
  "//": "REACTION GRAMMAR START",
  "<ComplimentEnemyMove>": [
    "Ok, that was a good move by their `getMovingPiece()`"
  ],
  "<InsultEnemyMove>": [
    "What a stupid move `getMovingPiece()`!"
  ],
  "<QuestionEnemyMove>": [
    "... why did `getMovingPiece()` move there?"
  ],
  "<ReactEnemyPieceCaptured>": [
    "Oh yay ! We got their `getCapturedPiece()`",
    "You were so brave `getMovingPiece()`!",
    "I could never have done that, `getMovingPiece()`!"
  ],
  "<ReactEnemyPieceThreatened>": [
    "I think we might be scaring their `getThreatenedPiece()`",
    "You.. might want to move your `getThreatenedPiece()`"
  ],
  "<ReactEnemyPieceEscaped>": [
    "You can't hide, `getEscapingPiece()`!",
    "You're safe for now, `getEscapingPiece()`!"
  ],
  "<ReactEnemyPieceProtecting>": [
    "Oh my, their `getMovingPiece()` stepped in to protect their `getEscapingPiece()`!"
  ],
  "<ReactFriendlyPieceCaptured>": [
    "Oh no, they captured `getCapturedPiece()`!",
    "I can't believe the `getMovingPiece()` captured `getCapturedPiece()`!",
    "I really hope `getMovingPiece()` can't see me right now..."
  ],
  "<ReactFriendlyPieceEscaped>": [
    "Thank goodness, `getEscapingPiece()` is safe now!",
    "`getEscapingPiece()` I'm so glad you're okay!"
  ],
  "<ReactFriendlyPieceProtecting>": [
    "Nice move `getMovingPiece()`, `getEscapingPiece()` is safe now!",
    "Hey, `getMovingPiece()`, can you protect me like you just protected `getEscapingPiece()`?"
  ],
  "<ReactFriendlyPieceThreatenedOnTheirMove>": [
    "Oh no they're going after `getThreatenedPiece()`",
    "Oh, `getThreatenedPiece()`, you're in danger!"
  ],
  "<ReactFriendlyPieceThreatenedOnOurMove>": [
    "Wait no now `getThreatenedPiece()` could get hurt!",
    "Why did nobody say that `getThreatenedPiece()` could get hurt doing that!"
  ],
  "<ReactLastMoveDiscussedPerformedLIKE>": [
    "That was a good move, `getMovingPiece()`."
  ],
  "<ReactLastMoveDiscussedPerformedDISLIKE>": [
    "..."
  ],
  "<ReactLastMoveDiscussedPerformedNEUTRAL>": [
    "..."
  ],
  "<ReactPreviouslyDiscussedMovePerformedLIKE>": [
    "<ReactLastMoveDiscussedPerformedLIKE>"
  ],
  "<ReactPreviouslyDiscussedMovePerformedDISLIKE>": [
    "<ReactLastMoveDiscussedPerformedDISLIKE>"
  ],
  "<ReactPreviouslyDiscussedMovePerformedNEUTRAL>": [
    "<ReactLastMoveDiscussedPerformedNEUTRAL>"
  ],
  "<ReactUndiscussedMovePerformedLIKE>": [
    "<ReactLastMoveDiscussedPerformedLIKE>"
  ],
  "<ReactUndiscussedMovePerformedDISLIKE>": [
    "<ReactLastMoveDiscussedPerformedDISLIKE>"
  ],
  "<ReactUndiscussedMovePerformedNEUTRAL>": [
    "<ReactLastMoveDiscussedPerformedNEUTRAL>"
  ],
  "//": "REACTION GRAMMAR END"
}