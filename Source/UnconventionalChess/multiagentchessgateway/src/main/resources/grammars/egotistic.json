{
  "//": "ACTION GRAMMAR START",
  "<Acknowledge>": [
    "Nice.",
    "cool."
  ],
  "<AcknowledgeAndAskForProposals>": [
    "<Acknowledge>. <AskForProposals>"
  ],
  "<AskForProposals>": [
    "So, while I've got plenty of good ideas, I'd like to hear yours?",
    "Does anyone have any ideas for moves that would make me look good?",
    "It doesn't matter, but what do you think?"
  ],
  "<InitialAskForProposals>": [
    "So, while I've got plenty of good ideas, I'd like to hear yours?",
    "Does anyone have any ideas for moves that would make me look good?",
    "It doesn't matter, but what do you think?",
    "Does anyone have any suggestions? ",
    "What should we do now? ",
    "Ideas? ",
    "Ok, what now?"
  ],
  "<PerformMove>": [
    "Moving ",
    " Moving to `getMoveTarget()`",
    "I hope everyone is watching this...",
    "Don't worry guys, *I've*  got this",
    "About to make a move that finally matters..."
  ],
  "<VoiceLIKE>": [
    "That sounds like something I would do in your position",
    "I like that. That means it's definitely good.",
    "Moving to `getMoveTarget()` would be a good idea"
  ],
  "<VoiceDISLIKE>": [
    "Nah I don't like that.",
    "I don't like that ",
    " that doesn't sounds good ",
    " moving to `getMoveTarget()` would be an awful idea ",
    " I don't think we should do that"
  ],
  "<VoiceLIKEProposeAlternative>": [
    "<VoiceLIKE>, <ProposeAlternative>"
  ],
  "<VoiceDISLIKEProposeAlternative>": [
    "<VoiceDISLIKE>, <ProposeAlternative>"
  ],
  "<VoiceDISLIKEWithJustification>": [
    "<VoiceDISLIKE>, <Justification>"
  ],
  "<VoiceLIKEWithJustification>": [
    "<VoiceLIKE>, <Justification>"
  ],
  "<ProposeAlternative>": [
    "<ProposeAlternativeMove> <AlternativeJustification>"
  ],
  "<ProposeMove>": [
    "I think I'm definitely right when I say that `getMovingPiece()` should move to `getMoveTarget()`",
    "Don't worry everyone. I have a great idea, as always. `getMovingPiece()` should move to `getMoveTarget()`. Amazing right?",
    "I think `getMovingPiece()` should move to `getMoveTarget()`"
  ],
  "<VoiceLIKEProposeCompromise>": [
    "<VoiceLIKE> <ProposeCompromise>"
  ],
  "<VoiceDISLIKEProposeCompromise>": [
    "<VoiceDISLIKE> <ProposeCompromise>"
  ],
  "<ProposeCompromise>": [
    "<ProposeAlternativeMove> <Justification> too, <CompromiseJustification>",
    "<ProposeAlternativeMove> <Justification> also, <CompromiseJustification>",
    "<ProposeAlternativeMove> <Justification> as well, <CompromiseJustification>"
  ],
  "<CompromiseJustification>": [
    "but also <AlternativeJustification>",
    "and <AlternativeJustification>"
  ],
  "<ProposeMoveWithJustification>": [
    "<ProposeMove> <Justification>"
  ],
  "<ProposeAlternativeMove>": [
    "I think `getAlternativeMovingPiece()` should move to `getAlternativeMoveTarget()` instead",
    "A much better idea would be for `getAlternativeMovingPiece()` to move to `getAlternativeMoveTarget()` instead",
    "I definitely think `getAlternativeMovingPiece()` would be better off going to `getAlternativeMoveTarget()` instead"
  ],
  "<RevisitMove>": [
    "Can we go back to talking about `getMovingPiece()` moving to `getMoveTarget()`?",
    "I think `getMovingPiece()` moving to `getMoveTarget()` was a better idea, can we go back to that?"
  ],
  "<Justification>": [
    "because that move would `getJustification()`",
    "because doing that could `getJustification()`"
  ],
  "<AlternativeJustification>": [
    "because that move would `getAlternativeJustification()`",
    "because doing that could `getAlternativeJustification()`"
  ],
  "<Quip>": [
    "Can't wait for my moment to shine...",
    "Why can't you all just trust me, I know the right move every time"
  ],
  "//": "ACTION GRAMMAR END",
  "//": "REACTION GRAMMAR START",
  "<ComplimentEnemyMove>": [
    "Not bad. I could've done it better, but not bad.",
    "Ok, that was a good move by their `getMovingPiece()`"
  ],
  "<InsultEnemyMove>": [
    "What a stupid move `getMovingPiece()`!",
    "That was a good attempt by their `getMovingPiece()`",
    "Does their `getMovingPiece()` have any idea what they are doing?"
  ],
  "<QuestionEnemyMove>": [
    "... why did `getMovingPiece()` move there?",
    "I'm usually three steps ahead, but I really don't know why their `getMovingPiece()` moved there."
  ],
  "<ReactEnemyPieceCaptured>": [
    "Haha! We captured your `getCapturedPiece()`",
    "Nice work, `getMovingPiece()`!"
  ],
  "<ReactEnemyPieceThreatened>": [
    "Looks like your `getThreatenedPiece()` is in trouble!"
  ],
  "<ReactEnemyPieceEscaped>": [
    "You can't hide, `getEscapingPiece()`!",
    "You're safe for now, `getEscapingPiece()`!"
  ],
  "<ReactEnemyPieceProtecting>": [
    "You're lucky that `getMovingPiece()` stepped in, `getEscapingPiece()`!"
  ],
  "<ReactFriendlyPieceCaptured>": [
    "Oh no, they captured `getCapturedPiece()`!",
    "`getCapturedPiece()`, you're making us look bad!",
    "Oh, they captured `getCapturedPiece()`? At least it wasn't someone important. Like me.",
    "I can't believe the `getMovingPiece()` captured `getCapturedPiece()`!"
  ],
  "<ReactFriendlyPieceEscaped>": [
    "Thank goodness, `getEscapingPiece()` is safe now!",
    "Can we all stop worrying about `getEscapingPiece()` and pay attention to me now?",
    "Oh. Where you in trouble `getEscapingPiece()`? You're welcome for saving you."
  ],
  "<ReactFriendlyPieceProtecting>": [
    "Nice move `getMovingPiece()`, `getEscapingPiece()` is safe now!",
    "I hope you plan on doing the same for me `getMovingPiece()` that you just did for `getEscapingPiece()`"
  ],
  "<ReactFriendlyPieceThreatenedOnTheirMove>": [
    "Oh no they're going after `getThreatenedPiece()`"
  ],
  "<ReactFriendlyPieceThreatenedOnOurMove>": [
    "Wait no now `getThreatenedPiece()` could get hurt!"
  ],
  "<ReactLastMoveDiscussedPerformedLIKE>": [
    "I'm glad you agreed to move `getMovingPiece()`"
  ],
  "<ReactLastMoveDiscussedPerformedDISLIKE>": [
    "I don't think you should have moved there `getMovingPiece()`"
  ],
  "<ReactLastMoveDiscussedPerformedNEUTRAL>": [
    "Alright then I guess"
  ],
  "<ReactPreviouslyDiscussedMovePerformedLIKE>": [
    "I'm glad you agreed to move `getMovingPiece()`"
  ],
  "<ReactPreviouslyDiscussedMovePerformedDISLIKE>": [
    "I don't think we were done discussing `getMovingPiece()`!"
  ],
  "<ReactPreviouslyDiscussedMovePerformedNEUTRAL>": [
    "You should really wait until we've agreed on something next time, `getMovingPiece()`."
  ],
  "<ReactUndiscussedMovePerformedLIKE>": [
    "That was a great move `getMovingPiece()`, why didn't anyone suggest that?"
  ],
  "<ReactUndiscussedMovePerformedDISLIKE>": [
    "I can't believe you would just do that without even asking first `getMovingPiece()`!"
  ],
  "<ReactUndiscussedMovePerformedNEUTRAL>": [
    "You should really ask first next time, `getMovingPiece()`."
  ],
  "//": "REACTION GRAMMAR END"
}