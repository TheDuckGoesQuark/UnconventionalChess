{
  "//": "ACTION GRAMMAR START",
  "<Acknowledge>": [
    "Whatever.",
    "Fine.",
    "Sure?.",
    "Boring."
  ],
  "<AcknowledgeAndAskForProposals>": [
    "<Acknowledge>. <AskForProposals>"
  ],
  "<AskForProposals>": [
    "Any good ideas?",
    "Any of you idiots got a suggestion?",
    "I can't believe I'm asking, but what do you guys think we should do?",
    "Any of you losers have a good idea?",
    "Anyone have plan that will help me scare them?"
  ],
  "<InitialAskForProposals>": [
    "So..... what next?",
    "Anyone know how we can hurt them the most?",
    "Does anyone see any moves that capture someone?",
    "Does anyone have any suggestions? ",
    "What should we do now? ",
    "Ideas? ",
    "Ok, what now?"
  ],
  "<PerformMove>": [
    "Can't believe I have to do this...",
    "I'm coming for you!",
    "You're not safe from me!"
  ],
  "<VoiceLIKE>": [
    "HA! That is good.",
    "`getMoveTarget()` does sound like a fun place.",
    "Moving to `getMoveTarget()` would be a good idea"
  ],
  "<VoiceDISLIKE>": [
    "What a ridiculous idea!",
    "Why are we listening to this person, that's a terrible idea.",
    "Nah `getMoveTarget()` moving to is dumb idea.",
    " that doesn't sounds good ",
    " moving to `getMoveTarget()` would be an awful idea ",
    " I don't think we should do that"
  ],
  "<VoiceLIKEProposeAlternative>": [
    "<VoiceLIKE>, <ProposeAlternative>"
  ],
  "<VoiceDISLIKEProposeAlternative>": [
    "<VoiceDISLIKE>, <ProposeAlternative>"
  ],
  "<VoiceDISLIKEWithJustification>": [
    "<VoiceDISLIKE>, <Justification>"
  ],
  "<VoiceLIKEWithJustification>": [
    "<VoiceLIKE>, <Justification>"
  ],
  "<ProposeAlternative>": [
    "<ProposeAlternativeMove> <AlternativeJustification>"
  ],
  "<ProposeMove>": [
    "I think `getMovingPiece()` should move to `getMoveTarget()`",
    "`getMovingPiece()` moving to `getMoveTarget()` is the best idea"
  ],
  "<VoiceLIKEProposeCompromise>": [
    "<VoiceLIKE> <ProposeCompromise>"
  ],
  "<VoiceDISLIKEProposeCompromise>": [
    "<VoiceDISLIKE> <ProposeCompromise>"
  ],
  "<ProposeCompromise>": [
    "<ProposeAlternativeMove> <Justification> too, <CompromiseJustification>",
    "<ProposeAlternativeMove> <Justification> also, <CompromiseJustification>",
    "<ProposeAlternativeMove> <Justification> as well, <CompromiseJustification>"
  ],
  "<CompromiseJustification>": [
    "but also <AlternativeJustification>",
    "and <AlternativeJustification>"
  ],
  "<ProposeMoveWithJustification>": [
    "<ProposeMove> <Justification>"
  ],
  "<ProposeAlternativeMove>": [
    "`getMovingPiece()` moving to `getMoveTarget()` instead would *obviously* be the better idea",
    "I would prefer if `getMovingPiece()` moved to `getMoveTarget()`",
    "I think `getMovingPiece()` should move to `getMoveTarget()` instead",
    "I think `getAlternativeMovingPiece()` should move to `getAlternativeMoveTarget()` instead"
  ],
  "<RevisitMove>": [
    "Can't we just have `getMovingPiece()` move to `getMoveTarget()` like we said before?",
    "This idea is dumb, `getMovingPiece()` moving to `getMoveTarget()` was a better idea?",
    "Can we go back to talking about `getMovingPiece()` moving to `getMoveTarget()`?",
    "I think `getMovingPiece()` moving to `getMoveTarget()` was a better idea, can we go back to that?"
  ],
  "<Justification>": [
    "because that move would `getJustification()`",
    "because doing that could `getJustification()`"
  ],
  "<AlternativeJustification>": [
    "because that move would `getAlternativeJustification()`",
    "because doing that could `getAlternativeJustification()`"
  ],
  "<Quip>": [
    "God why am I helping these losers..",
    "This is so boring...",
    "I could definitely beat all of you in a fight..."
  ],
  "//": "ACTION GRAMMAR END",
  "//": "REACTION GRAMMAR START",
  "<ComplimentEnemyMove>": [
    "I guess that was kind of a good move...",
    "Hey their `getMovingPiece()` did something pretty smart. What a nerd.",
    "That was alright..."
  ],
  "<InsultEnemyMove>": [
    "Haha of course they would make a move like that",
    "Haha of course they would make a move that bad",
    "It's like their `getMovingPiece()` is just asking for it",
    "What a stupid move by their `getMovingPiece()`!"
  ],
  "<QuestionEnemyMove>": [
    "... why did `getMovingPiece()` move there?"
  ],
  "<ReactEnemyPieceCaptured>": [
    "Haha, imagine being dumb enough to get captured",
    "Was their `getMovingPiece()` even trying?",
    "Haha! We captured your `getCapturedPiece()`"
  ],
  "<ReactEnemyPieceThreatened>": [
    "`getThreatenedPiece()` is about to have a bad time",
    "Hey, your `getThreatenedPiece()` looks scared."
  ],
  "<ReactEnemyPieceEscaped>": [
    "I can't believe their `getEscapingPiece()` ran away!",
    "You're safe for now, `getEscapingPiece()`!",
    "wow, your `getEscapingPiece()` is such a wimp!"
  ],
  "<ReactEnemyPieceProtecting>": [
    "You're lucky that `getMovingPiece()` stepped in, `getEscapingPiece()`!",
    "You think you can keep `getEscapingPiece()` safe, `getMovingPiece()`?",
    "So, `getEscapingPiece()`, you think you can protect `getMovingPiece()`?"
  ],
  "<ReactFriendlyPieceCaptured>": [
    "C'mon, `getCapturedPiece()`, you're making us look bad!",
    "Oh man, `getCapturedPiece()`!",
    "Oh no, they captured `getCapturedPiece()`!",
    "I can't believe the `getMovingPiece()` captured `getCapturedPiece()`!"
  ],
  "<ReactFriendlyPieceEscaped>": [
    "`getEscapingPiece()`, why did you run away?",
    "`getEscapingPiece()`, why aren't you still facing them!"
  ],
  "<ReactFriendlyPieceProtecting>": [
    "`getMovingPiece()` why are you helping `getEscapingPiece()`, they're fine!",
    "`getMovingPiece()` don't get stop `getEscapingPiece()` from fighting back."
  ],
  "<ReactFriendlyPieceThreatenedOnTheirMove>": [
    "`getThreatenedPiece()`, time to show them what we've got.",
    "Ooooh looks like `getThreatenedPiece()` is gonna fight!."
  ],
  "<ReactFriendlyPieceThreatenedOnOurMove>": [
    "`getThreatenedPiece()`, it is your time to fight.",
    "I hope you've been going to the gym, `getThreatenedPiece()`",
    "Woah `getThreatenedPiece()` didn't think you were the type to fight!"
  ],
  "<ReactLastMoveDiscussedPerformedLIKE>": [
    "finally someone making cool decisions..., nice `getMovingPiece()`",
    "hey `getMovingPiece()` that wa pretty good!"
  ],
  "<ReactLastMoveDiscussedPerformedDISLIKE>": [
    "That was such a dumb move, `getMovingPiece()`!",
    "`getMovingPiece()` that was a pretty uncool thing to do."
  ],
  "<ReactLastMoveDiscussedPerformedNEUTRAL>": [
    "Meh. I guess we can do that",
    "Boring move but sure whatever `getMovingPiece()`"
  ],
  "<ReactPreviouslyDiscussedMovePerformedLIKE>": [
    "I thought that was a good idea too, `getMovingPiece()`."
  ],
  "<ReactPreviouslyDiscussedMovePerformedDISLIKE>": [
    "Don't think that move was very smart personally, `getMovingPiece()`!",
    "`getMovingPiece()` we weren't done talking!"
  ],
  "<ReactPreviouslyDiscussedMovePerformedNEUTRAL>": [
    "Not sure about that one `getMovingPiece()`, but I still had some good ideas to talk about."
  ],
  "<ReactUndiscussedMovePerformedLIKE>": [
    "Aha nice, I was totally going to suggest that move `getMovingPiece()`"
  ],
  "<ReactUndiscussedMovePerformedDISLIKE>": [
    "`getMovingPiece()` being totally lame, as always."
  ],
  "<ReactUndiscussedMovePerformedNEUTRAL>": [
    "You should really ask first next time, `getMovingPiece()`."
  ],
  "//": "REACTION GRAMMAR END"
}